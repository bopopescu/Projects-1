数据运算
>>> r = (1,2,3,4,5,6,7)   
>>> type (r)     #查看数据类型
<class 'tuple'>
>>> 10 % 2  #除整数 
0
>>> 10 % 3
1
>>> a > 2 and c < 8 and b > 4 or c == 8
True

>>> if not a >2 and c < 2 and b >4 or c == 8 :print('dd')
...


>>> if not a.isdigit():print('ddd')
...


>>> a = '333'
>>> a.isdigit()
True
>>> if not a.isdigit():print('dddd')
...
>>> if 1 not in a:print('sdfwe')  #1不在里面打印‘sdfwe’
...


>>> if 6 not in a: print('sdfd')
...
sdfd
成员运算
身份运算
>> a = [1,2,3,4]
>>> a
[1, 2, 3, 4]
>>> type(a)
<class 'list'>
>>> a is list
False
>>> type(a) is list
True
>> type('333')
<class 'str'>
>>> type('333') is list
False
>>> type('333') is str
True
位运算 二进制运算
>> 2**16
65536
>>> 2**16-1
65535
>>>
8	4	2	1
0	0	0	0	
0	1	0	1	=	5
1	0	0	1	=	9
-------------------------
1	1	1	0	=	14
---------------------------------
计算机能表示最小单位 是一个二进制位
计算机能存储最小单位 是一个二进制位（bit）
8bit  = byte(1字节)
1024byte = 1kbyte
1024kbyte = 1Mbyte
1024MB = 1GB
1024GB = 1TB
######################
& 按位运算符 

--------------------------------------------------------
128	64	32	16	8	4	2	1	
0	0	1	1	1	1	0	0	=  60
0	0	0	0	1	1	0	1	=	13

and 
--------------------------------------------------------------
0	0	0	0	1	1	0	0	=	12
>>> 60 & 13
12

or 
--------------------------------------------------------------
0	0	1	1	1	1	0	1	=	61	
>>> 60|13
61

0	0	1	1	0	0	0	1	=	49	
---------------------------------------------
1	1	0	0	0	0	1	1	=	195
>>> ~60
-61
左
>>> 64/2
32.0
>>> 64>>2
16
>>> 64>>1
32
>>> 64/4
16.0
右
>>> 64<<1
128
>>> 64<<2
256
>>> 64<<4
1024

 
--------------------------------------------------------------



